/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.WorkAreas.AdminRole;

import Business.Business;
import University.CourseSchedule.CourseOffer;
import University.CourseSchedule.*;
import University.Department.Department;
import University.Faculty.FacultyDirectory;
import University.Faculty.FacultyProfile;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HU
 */
public class AdminAssignTeacherJPanel extends javax.swing.JPanel {
    private Business business;
    private String selectedSemester;
    private JPanel CardSequencePanel;
    /**
     * Creates new form AdminAssignTeacherJPanel
     */
    public AdminAssignTeacherJPanel(Business business, String selectedSemester, JPanel CardSequencePanel) {
        initComponents();
        this.business = business;
        this.selectedSemester = selectedSemester;
        this.CardSequencePanel = CardSequencePanel;
        populateCourseOffersTable();
        populateFacultyDirectoryTable();
    }
    private void populateCourseOffersTable() {
        // Retrieve the course schedule for the selected semester
        CourseSchedule courseSchedule = retrieveCourseSchedule(selectedSemester);
        if (courseSchedule != null) {
            // Retrieve the course offers for the selected semester
            ArrayList<CourseOffer> courseOffers = courseSchedule.getSchedule();
            // Populate the table with course offers
            DefaultTableModel model = (DefaultTableModel) tblCourseOffers.getModel();
            model.setRowCount(0);
            for (CourseOffer offer : courseOffers) {
                Object[] row = new Object[]{
                    offer.getCourseNumber(),
                    offer.getCourseName(),
                    offer.getRemainingSeats(),
                    offer.getTotalSeats(),
                    offer.getFacultyProfile() != null ? offer.getFacultyProfile().getName() : "Not Assigned"
                };
                model.addRow(row);
            }
        }
    }

    private void populateFacultyDirectoryTable() {
        DefaultTableModel model = (DefaultTableModel) tblFacultyDirectory.getModel();
        model.setRowCount(0);

        Department department = retrieveDepartmentFromBusiness(business);
        if (department != null) {
            FacultyDirectory facultyDirectory = department.getFacultyDirectory();
            for (FacultyProfile facultyProfile : facultyDirectory.getTeacherlist()) {
                Object[] row = new Object[]{
                    facultyProfile.getName(),
                    facultyProfile.getPerson().getPersonId()
                };
                model.addRow(row);
            }
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCourseOffers = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFacultyDirectory = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        Back = new javax.swing.JButton();
        btnAssignTeacherToCourseOffer = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 153));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("Admin Manage Course Offerings: Faculty Assignment");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("CourseOffering");

        tblCourseOffers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Course Number", "Course Name", "Seat Available", "Total Seat", "Faculty Name"
            }
        ));
        jScrollPane1.setViewportView(tblCourseOffers);

        tblFacultyDirectory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Faculty Name", "Faculty ID"
            }
        ));
        jScrollPane2.setViewportView(tblFacultyDirectory);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("FacultyList");

        Back.setText("<< Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        btnAssignTeacherToCourseOffer.setText("Assign Teacher to Course Offer");
        btnAssignTeacherToCourseOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignTeacherToCourseOfferActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 6, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 693, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, 29))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAssignTeacherToCourseOffer, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Back)
                    .addComponent(btnAssignTeacherToCourseOffer))
                .addGap(58, 58, 58))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        // Navigate back to the AdminCourseScheduleJPanel
        CardSequencePanel.remove(this);
        AdminCourseScheduleJPanel adminCourseSchedulePanel = new AdminCourseScheduleJPanel(business, CardSequencePanel);
        CardSequencePanel.add(adminCourseSchedulePanel);
        CardSequencePanel.revalidate();
        CardSequencePanel.repaint();
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).previous(CardSequencePanel);
    }//GEN-LAST:event_BackActionPerformed

    private void btnAssignTeacherToCourseOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignTeacherToCourseOfferActionPerformed
        // TODO add your handling code here:
                int selectedCourseOfferRow = tblCourseOffers.getSelectedRow();
        int selectedFacultyRow = tblFacultyDirectory.getSelectedRow();

        if (selectedCourseOfferRow >= 0 && selectedFacultyRow >= 0) {
            String courseNumber = (String) tblCourseOffers.getValueAt(selectedCourseOfferRow, 0);
            String facultyID = (String) tblFacultyDirectory.getValueAt(selectedFacultyRow, 1);

            Department department = retrieveDepartmentFromBusiness(business);
            if (department != null) {
                CourseSchedule courseSchedule = department.getCourseSchedule(selectedSemester);
                FacultyDirectory facultyDirectory = department.getFacultyDirectory();

                CourseOffer selectedCourseOffer = courseSchedule.getCourseOfferByNumber(courseNumber);
                FacultyProfile selectedFaculty = facultyDirectory.findTeachingFaculty(facultyID);

                if (selectedCourseOffer != null && selectedFaculty != null) {
                    selectedCourseOffer.AssignAsTeacher(selectedFaculty);
                    JOptionPane.showMessageDialog(this, "Teacher assigned to the course offer successfully.");
                    populateCourseOffersTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid course offer or faculty selection.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a course offer and a faculty member.");
        }
        
    }//GEN-LAST:event_btnAssignTeacherToCourseOfferActionPerformed
    private CourseSchedule retrieveCourseSchedule(String semester) {
        Department department = retrieveDepartmentFromBusiness(business);
        if (department != null) {
            return department.getCourseSchedule(semester);
        }
        return null;
    }
        private Department retrieveDepartmentFromBusiness(Business business) {
        String departmentName = "Information Systems";
        for (Department department : business.getDepartments()) {
            if (department.getName().equals(departmentName)) {
                return department;
            }
        }
        return null;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton btnAssignTeacherToCourseOffer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblCourseOffers;
    private javax.swing.JTable tblFacultyDirectory;
    // End of variables declaration//GEN-END:variables
}
