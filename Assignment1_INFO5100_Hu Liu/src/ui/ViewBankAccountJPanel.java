/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.BankAccount;
import model.BankAccountDirectory;

/**
 *
 * @author HU
 */
public class ViewBankAccountJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPersonJPanel
     */
    BankAccountDirectory bankAccountList;
    
    
    public ViewBankAccountJPanel(BankAccountDirectory bankAccountList) {
        initComponents();
        this.bankAccountList = bankAccountList;
        
        
        populateTable();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblBankAccountTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBankAccount = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtOccupation = new javax.swing.JTextField();
        lblPersonName = new javax.swing.JLabel();
        txtAccountType = new javax.swing.JTextField();
        lblOccupation = new javax.swing.JLabel();
        lblAccountType = new javax.swing.JLabel();
        txtDebtAmount = new javax.swing.JTextField();
        txtCreditAmount = new javax.swing.JTextField();
        lblDebtAmount = new javax.swing.JLabel();
        lblCreditAmount = new javax.swing.JLabel();
        txtPersonName = new javax.swing.JTextField();

        lblBankAccountTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBankAccountTitle.setText("View Bank Account");

        tblBankAccount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Person Name", "Occupation", "Account Type", "Debt Amount", "Credit Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblBankAccount);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtOccupation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOccupationActionPerformed(evt);
            }
        });

        lblPersonName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPersonName.setText("Person Name:");

        txtAccountType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAccountTypeActionPerformed(evt);
            }
        });

        lblOccupation.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblOccupation.setText("Occupation:");

        lblAccountType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAccountType.setText("Account Type:");

        txtDebtAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDebtAmountActionPerformed(evt);
            }
        });

        txtCreditAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCreditAmountActionPerformed(evt);
            }
        });

        lblDebtAmount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDebtAmount.setText("Debt Amount:");

        lblCreditAmount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreditAmount.setText("Credit Amount:");

        txtPersonName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPersonNameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBankAccountTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCreditAmount)
                            .addComponent(lblDebtAmount)
                            .addComponent(lblAccountType)
                            .addComponent(lblOccupation)
                            .addComponent(lblPersonName))
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPersonName, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtOccupation, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDebtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCreditAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblBankAccountTitle)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(btnDelete))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPersonName)
                    .addComponent(txtPersonName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblOccupation)
                    .addComponent(txtOccupation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAccountType)
                    .addComponent(txtAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDebtAmount)
                    .addComponent(txtDebtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreditAmount)
                    .addComponent(txtCreditAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(64, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtOccupationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOccupationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOccupationActionPerformed

    private void txtAccountTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAccountTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAccountTypeActionPerformed

    private void txtDebtAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDebtAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDebtAmountActionPerformed

    private void txtCreditAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCreditAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCreditAmountActionPerformed

    private void txtPersonNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPersonNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPersonNameActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblBankAccount.getSelectedRow();
        
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;
        }
        DefaultTableModel model = (DefaultTableModel)tblBankAccount.getModel();        
        BankAccount selectedBankAccount = (BankAccount) model.getValueAt(selectedRowIndex, 0);
        
        txtPersonName.setText(selectedBankAccount.getPersonName());
        txtOccupation.setText(selectedBankAccount.getOccupation());
        txtAccountType.setText(selectedBankAccount.getAccountType());
        txtDebtAmount.setText(selectedBankAccount.getDebtAmount());
        txtCreditAmount.setText(selectedBankAccount.getCreditAmount());        
        
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblBankAccount.getSelectedRow();
        
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel)tblBankAccount.getModel();        
        BankAccount selectedBankAccount = (BankAccount) model.getValueAt(selectedRowIndex, 0);
        
        bankAccountList.deleteHomeAddress(selectedBankAccount);
        JOptionPane.showMessageDialog(this, "Bank Account deleted"); 
        
        populateTable();
        
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnView;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAccountType;
    private javax.swing.JLabel lblBankAccountTitle;
    private javax.swing.JLabel lblCreditAmount;
    private javax.swing.JLabel lblDebtAmount;
    private javax.swing.JLabel lblOccupation;
    private javax.swing.JLabel lblPersonName;
    private javax.swing.JTable tblBankAccount;
    private javax.swing.JTextField txtAccountType;
    private javax.swing.JTextField txtCreditAmount;
    private javax.swing.JTextField txtDebtAmount;
    private javax.swing.JTextField txtOccupation;
    private javax.swing.JTextField txtPersonName;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel)tblBankAccount.getModel();
        model.setRowCount(0);
        
        for (BankAccount ba : bankAccountList.getBankAccountList()){
            Object[] row = new Object[5];
            row[0] = ba;
            row[1] = ba.getOccupation();
            row[2] = ba.getAccountType();
            row[3] = ba.getDebtAmount();
            row[4] = ba.getCreditAmount();
            
            model.addRow(row);
            
        }
        
        
    }
}
